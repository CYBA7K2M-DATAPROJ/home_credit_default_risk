# Use a base image with CUDA and Python 3.10
FROM nvidia/cuda:11.2.2-cudnn8-runtime-ubuntu20.04

# Accept arguments for GitHub and ngrok
ARG GITHUB_REPO=""
ARG GITHUB_BRANCH="main"
ARG GITHUB_USERNAME=""
ARG GITHUB_TOKEN=""
ARG GITHUB_EMAIL=""
ARG NGROK_AUTHTOKEN=""

# Ajouter les clés GPG manuellement pour éviter les erreurs de signature
RUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3B4FE6ACC0B21F32 \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 40976EAF437D05B5 \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4E2C6E8793298290 \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 871920D1991BC93C \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 1E9377A2BA9EF27F

# Utiliser les miroirs alternatifs
RUN sed -i 's|http://archive.ubuntu.com/ubuntu/|http://mirrors.kernel.org/ubuntu/|g' /etc/apt/sources.list \
    && sed -i 's|http://security.ubuntu.com/ubuntu/|http://mirrors.kernel.org/ubuntu/|g' /etc/apt/sources.list \
    && sed -i 's|http://mirrors.kernel.org/ubuntu/|http://ftp.us.debian.org/debian/|g' /etc/apt/sources.list

RUN apt-get clean && rm -rf /var/lib/apt/lists/*
RUN apt-get update -o Debug::pkgProblemResolver=true
RUN cat /etc/apt/sources.list
RUN apt-key list

# Installer les dépendances de base
RUN apt-get update && apt-get install -y \
    openjdk-11-jre-headless \
    wget \
    unzip \
    git \
    curl \
    python3-pip

ENV DEBIAN_FRONTEND=dialog

# Configurer les variables d'environnement
ENV HADOOP_HOME=/usr/local/hadoop
ENV PATH=$PATH:$HADOOP_HOME/bin
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
ENV PATH=$PATH:$JAVA_HOME/bin

# Installer Hadoop client
RUN wget https://archive.apache.org/dist/hadoop/common/hadoop-3.3.5/hadoop-3.3.5.tar.gz && \
    tar -xzvf hadoop-3.3.5.tar.gz && \
    mv hadoop-3.3.5 /usr/local/hadoop && \
    rm hadoop-3.3.5.tar.gz

# Clone the GitHub repository
WORKDIR /content
RUN if [ ! -z "$GITHUB_REPO" ]; then \
      git clone --branch $GITHUB_BRANCH https://$GITHUB_USERNAME:$GITHUB_TOKEN@$GITHUB_REPO . && \
      git config user.name "$GITHUB_USERNAME" && \
      git config user.email "$GITHUB_EMAIL"; \
    fi

# Installer Git LFS
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
RUN apt-get install git-lfs

# Download large files
RUN git lfs pull

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt


# Expose the default port for Jupyter
EXPOSE 8888

# Command to start the Jupyter server with ngrok
CMD ["python3", "run_jupyter_with_ngrok.py"]